buildscript {
    repositories {
        mavenCentral()
		jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "jitpack"
            url = "https://jitpack.io"
        }
    }
    dependencies {
        classpath "com.github.GTNH2:ForgeGradle:FG_1.2-SNAPSHOT"
    }
}

apply plugin: 'forge'

if(!invtweaks_version) {
    invtweaks_version = "UNKNOWN"
}

def getGitCommitHash = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--short', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch(ignored) {
        return null;
    }
}

def getGitDirtyIndex = { ->
    try {
        return exec {
            commandLine 'git', 'diff-index', '--quiet', '--cached', 'HEAD'
            ignoreExitValue = true
        }.exitValue == 1
    } catch(ignored) {
        return false;
    }
}

def getGitDirtyFiles = { ->
    try {
        return exec {
            commandLine 'git', 'diff-files', '--quiet'
            ignoreExitValue = true
        }.exitValue == 1
    } catch(ignored) {
        return false;
    }
}

ext.git_version = getGitCommitHash()
ext.git_dirty = getGitDirtyIndex() || getGitDirtyFiles()

ext.build_number = System.getenv("BUILD_NUMBER")

if(build_number)  {
    version = invtweaks_version + "-" + build_number
} else {
    version = invtweaks_version
}

if(git_version)  {
    ext.internal_version = version + "-" + git_version
    if(git_dirty) {
        ext.internal_version += "-dirty"
    }
} else {
    ext.internal_version = version
}

group = "inventorytweaks" // No stupid URL conventions
archivesBaseName = "InventoryTweaks"

ext.mcversion = "1.7.10"
minecraft {
    version = "1.7.10-10.13.4.1517-1.7.10"
    at 'src/main/resources/invtweaks_at.cfg'

    replace "@VERSION@", project.internal_version
    replaceIn "InvTweaksConst.java"
}

sourceCompatibility = 1.6
targetCompatibility = 1.6

compileJava {
    options.debug = true
    options.debugOptions.debugLevel = "source,lines,vars"
}

jar {
    manifest {
        attributes 'FMLCorePlugin': 'invtweaks.forge.asm.FMLPlugin', 'FMLCorePluginContainsFMLMod': 'true'
    }
}

task apiJar(type: Jar) {
    dependsOn processResources

    from sourceSets.main.allJava
    include 'invtweaks/api/**'

    appendix = 'api'
}

task deobfJar(type: Jar) {
    dependsOn classes

    from sourceSets.main.output
    
    manifest {
        attributes 'FMLCorePlugin': 'invtweaks.forge.asm.FMLPlugin', 'FMLCorePluginContainsFMLMod': 'true'
    }

    appendix = 'deobf'
}

artifacts {
    archives apiJar
    archives deobfJar
}

processResources
{
    inputs.property "version", internal_version
    inputs.property "mcversion", mcversion

    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.png'
        exclude '**/*_at.cfg'

        expand version: internal_version, mcversion: mcversion
    }
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.png'
        include '**/*_at.cfg'
    }
}
